{"ast":null,"code":"const newNumber = (number, height, width) => {\n  if (width > 1) {\n    number.map(item => {\n      for (let index = 1; index < width; index++) {\n        item.splice(2, 0, item[1]);\n      }\n    });\n  }\n\n  if (height > 1) {\n    const newArr = num => num.map((item, index) => {\n      if (index === 0 || index === number[1].length - 1) {\n        return item;\n      } else {\n        return \"\\u00A0 \\u00A0\";\n      }\n    });\n\n    for (let index = 1; index < height; index++) {\n      number.splice(1, 0, newArr(number[1]));\n      number.splice(number.length - 1, 0, newArr(number[number.length - 1]));\n    }\n  }\n\n  return number;\n};\n\nexport const Number0 = (height, width) => {\n  let number = [[\"\\u00A0\", \"_\", \"\\u00A0\"], [\"|\", \"\\u00A0 \\u00A0\", \"|\"], [\"|\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number1 = (height, width) => {\n  let number = [[\"\\u00A0\", \"\\u00A0\", \"\\u00A0\"], [\"\\u00A0\", \"\\u00A0\", \"|\"], [\"\\u00A0\", \"\\u00A0\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number2 = (height, width) => {\n  let number = [[\"\\u00A0\", \"_\", \"\\u00A0\"], [\"\\u00A0\", \"_\", \"|\"], [\"|\", \"_\", \"\\u00A0\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number3 = (height, width) => {\n  let number = [[\"\\u00A0\", \"_\", \"\\u00A0\"], [\"\\u00A0\", \"_\", \"|\"], [\"\\u00A0\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number4 = (height, width) => {\n  let number = [[\"\\u00A0\", \"\\u00A0\", \"\\u00A0\"], [\"|\", \"_\", \"|\"], [\"\\u00A0 \", \"\\u00A0 \\u00A0\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number5 = (height, width) => {\n  let number = [[\"\\u00A0\", \"_\", \"\\u00A0\"], [\"|\", \"_\", \" \"], [\"\\u00A0\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number6 = (height, width) => {\n  let number = [[\"\", \"_\", \"\\u00A0\"], [\"|\", \"_\", \"\\u00A0 \"], [\"|\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number7 = (height, width) => {\n  let number = [[\"\\u00A0\", \"_\", \"\\u00A0\"], [\"\\u00A0\", \"\\u00A0 \\u00A0\", \"|\"], [\"\\u00A0\", \"\\u00A0 \\u00A0\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number8 = (height, width) => {\n  let number = [[\"\", \"_\", \"\"], [\"|\", \"_\", \"|\"], [\"|\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};\nexport const Number9 = (height, width) => {\n  let number = [[\"\", \"_\", \"\"], [\"|\", \"_\", \"|\"], [\"\\u00A0\", \"_\", \"|\"]];\n  const newNumberToShow = newNumber(number, height, width);\n  return newNumberToShow;\n};","map":{"version":3,"sources":["F:/Development/Projects/NODE/BrightCoders/Feb/kata-01-object-oriented-programming-DemisRincon/src/frontend/library/constants/index.js"],"names":["newNumber","number","height","width","map","item","index","splice","newArr","num","length","Number0","newNumberToShow","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,KAA2B;AACzC,MAAIA,KAAK,GAAG,CAAZ,EAAe;AACXF,IAAAA,MAAM,CAACG,GAAP,CAAWC,IAAI,IAAI;AACf,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,KAA5B,EAAmCG,KAAK,EAAxC,EAA4C;AACxCD,QAAAA,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,CAAf,EAAkBF,IAAI,CAAC,CAAD,CAAtB;AACH;AACJ,KAJD;AAKH;;AAED,MAAIH,MAAM,GAAG,CAAb,EAAgB;AACZ,UAAMM,MAAM,GAAIC,GAAD,IAASA,GAAG,CAACL,GAAJ,CAAQ,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7C,UAAIA,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAKL,MAAM,CAAC,CAAD,CAAN,CAAUS,MAAV,GAAmB,CAAhD,EAAmD;AAC/C,eAAOL,IAAP;AACH,OAFD,MAGK;AACD,eAAO,eAAP;AACH;AACJ,KAPuB,CAAxB;;AAQA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGJ,MAA5B,EAAoCI,KAAK,EAAzC,EAA6C;AACzCL,MAAAA,MAAM,CAACM,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoBC,MAAM,CAACP,MAAM,CAAC,CAAD,CAAP,CAA1B;AACAA,MAAAA,MAAM,CAACM,MAAP,CAAcN,MAAM,CAACS,MAAP,GAAgB,CAA9B,EAAiC,CAAjC,EAAoCF,MAAM,CAACP,MAAM,CAACA,MAAM,CAACS,MAAP,GAAgB,CAAjB,CAAP,CAA1C;AACH;AACJ;;AACD,SAAOT,MAAP;AACH,CAxBD;;AA2BA,OAAO,MAAMU,OAAO,GAAG,CAACT,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CADS,EAET,CAAC,GAAD,EAAM,eAAN,EAAuB,GAAvB,CAFS,EAGT,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAHS,CAAb;AAMA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAXM;AAYP,OAAO,MAAMC,OAAO,GAAG,CAACX,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CADS,EAET,CAAC,QAAD,EAAW,QAAX,EAAqB,GAArB,CAFS,EAGT,CAAC,QAAD,EAAW,QAAX,EAAqB,GAArB,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAME,OAAO,GAAG,CAACZ,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CADS,EAET,CAAC,QAAD,EAAW,GAAX,EAAgB,GAAhB,CAFS,EAGT,CAAC,GAAD,EAAM,GAAN,EAAW,QAAX,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMG,OAAO,GAAG,CAACb,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CADS,EAET,CAAC,QAAD,EAAW,GAAX,EAAgB,GAAhB,CAFS,EAGT,CAAC,QAAD,EAAW,GAAX,EAAgB,GAAhB,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMI,OAAO,GAAG,CAACd,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,CADS,EAET,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFS,EAGT,CAAC,SAAD,EAAY,eAAZ,EAA8B,GAA9B,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMK,OAAO,GAAG,CAACf,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CADS,EAET,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFS,EAGT,CAAC,QAAD,EAAW,GAAX,EAAgB,GAAhB,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMM,OAAO,GAAG,CAAChB,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,EAAD,EAAK,GAAL,EAAU,QAAV,CADS,EAET,CAAC,GAAD,EAAM,GAAN,EAAW,SAAX,CAFS,EAGT,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMO,OAAO,GAAG,CAACjB,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,QAAD,EAAW,GAAX,EAAgB,QAAhB,CADS,EAET,CAAC,QAAD,EAAW,eAAX,EAA4B,GAA5B,CAFS,EAGT,CAAC,QAAD,EAAW,eAAX,EAA4B,GAA5B,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMQ,OAAO,GAAG,CAAClB,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,CADS,EAET,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFS,EAGT,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM;AAWP,OAAO,MAAMS,OAAO,GAAG,CAACnB,MAAD,EAASC,KAAT,KAAmB;AAEtC,MAAIF,MAAM,GAAG,CACT,CAAC,EAAD,EAAK,GAAL,EAAU,EAAV,CADS,EAET,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAFS,EAGT,CAAC,QAAD,EAAW,GAAX,EAAgB,GAAhB,CAHS,CAAb;AAKA,QAAMW,eAAe,GAAGZ,SAAS,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAjC;AAEA,SAAOS,eAAP;AACH,CAVM","sourcesContent":["const newNumber = (number, height, width) => {\r\n    if (width > 1) {\r\n        number.map(item => {\r\n            for (let index = 1; index < width; index++) {\r\n                item.splice(2, 0, item[1])\r\n            }\r\n        })\r\n    }\r\n\r\n    if (height > 1) {\r\n        const newArr = (num) => num.map((item, index) => {\r\n            if (index === 0 || index === number[1].length - 1) {\r\n                return item\r\n            }\r\n            else {\r\n                return \"\\u00A0 \\u00A0\"\r\n            }\r\n        })\r\n        for (let index = 1; index < height; index++) {\r\n            number.splice(1, 0, newArr(number[1]))\r\n            number.splice(number.length - 1, 0, newArr(number[number.length - 1]))\r\n        }\r\n    }\r\n    return number\r\n}\r\n\r\n\r\nexport const Number0 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"_\", \"\\u00A0\"],\r\n        [\"|\", \"\\u00A0 \\u00A0\", \"|\"],\r\n        [\"|\", \"_\", \"|\"]\r\n    ]\r\n\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number1 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"\\u00A0\", \"\\u00A0\"],\r\n        [\"\\u00A0\", \"\\u00A0\", \"|\"],\r\n        [\"\\u00A0\", \"\\u00A0\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number2 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"_\", \"\\u00A0\"],\r\n        [\"\\u00A0\", \"_\", \"|\"],\r\n        [\"|\", \"_\", \"\\u00A0\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number3 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"_\", \"\\u00A0\"],\r\n        [\"\\u00A0\", \"_\", \"|\"],\r\n        [\"\\u00A0\", \"_\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number4 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"\\u00A0\", \"\\u00A0\"],\r\n        [\"|\", \"_\", \"|\"],\r\n        [\"\\u00A0 \", \"\\u00A0 \\u00A0\",  \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number5 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"_\", \"\\u00A0\"],\r\n        [\"|\", \"_\", \" \"],\r\n        [\"\\u00A0\", \"_\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number6 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\", \"_\", \"\\u00A0\"],\r\n        [\"|\", \"_\", \"\\u00A0 \"],\r\n        [\"|\", \"_\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number7 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\\u00A0\", \"_\", \"\\u00A0\"],\r\n        [\"\\u00A0\", \"\\u00A0 \\u00A0\", \"|\"],\r\n        [\"\\u00A0\", \"\\u00A0 \\u00A0\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number8 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\", \"_\", \"\"],\r\n        [\"|\", \"_\", \"|\"],\r\n        [\"|\", \"_\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n}\r\nexport const Number9 = (height, width) => {\r\n\r\n    let number = [\r\n        [\"\", \"_\", \"\"],\r\n        [\"|\", \"_\", \"|\"],\r\n        [\"\\u00A0\", \"_\", \"|\"]\r\n    ]\r\n    const newNumberToShow = newNumber(number, height, width)\r\n\r\n    return newNumberToShow\r\n} "]},"metadata":{},"sourceType":"module"}