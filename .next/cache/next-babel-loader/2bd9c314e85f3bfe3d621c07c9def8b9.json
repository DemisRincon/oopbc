{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { Number0, Number1, Number2, Number3, Number4, Number5, Number6, Number7, Number8, Number9 } from '../constants';\nexport const useArrayConvertion = (number, initalValue, height = 1, width = 1) => {\n  const {\n    0: numbers,\n    1: setNumbers\n  } = useState(initalValue);\n  const {\n    0: numbersConsole,\n    1: setNumbersConsole\n  } = useState(initalValue);\n  useEffect(() => {\n    let array = Array.from(number);\n    let newArray = [];\n    let arrayToConsole = [];\n    array.map(item => {\n      switch (item) {\n        case \"0\":\n          newArray = [...newArray, \"Cero\"];\n          arrayToConsole = [...arrayToConsole, Number0(height, width)];\n          break;\n\n        case \"1\":\n          newArray = [...newArray, \"One\"];\n          arrayToConsole = [...arrayToConsole, Number1(height, width)];\n          break;\n\n        case \"2\":\n          newArray = [...newArray, \"Two\"];\n          arrayToConsole = [...arrayToConsole, Number2(height, width)];\n          break;\n\n        case \"3\":\n          newArray = [...newArray, \"Three\"];\n          arrayToConsole = [...arrayToConsole, Number3(height, width)];\n          break;\n\n        case \"4\":\n          newArray = [...newArray, \"Four\"];\n          arrayToConsole = [...arrayToConsole, Number4(height, width)];\n          break;\n\n        case \"5\":\n          newArray = [...newArray, \"Five\"];\n          arrayToConsole = [...arrayToConsole, Number5(height, width)];\n          break;\n\n        case \"6\":\n          newArray = [...newArray, \"Six\"];\n          arrayToConsole = [...arrayToConsole, Number6(height, width)];\n          break;\n\n        case \"7\":\n          newArray = [...newArray, \"Seven\"];\n          arrayToConsole = [...arrayToConsole, Number7(height, width)];\n          break;\n\n        case \"8\":\n          newArray = [...newArray, \"Eight\"];\n          arrayToConsole = [...arrayToConsole, Number8(height, width)];\n          break;\n\n        case \"9\":\n          newArray = [...newArray, \"Nine\"];\n          arrayToConsole = [...arrayToConsole, Number9(height, width)];\n          break;\n\n        default:\n          break;\n      }\n    });\n    setNumbers(newArray);\n    setNumbersConsole(arrayToConsole);\n  }, [number, height, width]);\n  return [{\n    numbers,\n    numbersConsole\n  }];\n};","map":{"version":3,"sources":["F:/Development/Projects/NODE/BrightCoders/Feb/kata-01-object-oriented-programming-DemisRincon/src/frontend/library/hooks/Number.js"],"names":["useEffect","useState","Number0","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","useArrayConvertion","number","initalValue","height","width","numbers","setNumbers","numbersConsole","setNumbersConsole","array","Array","from","newArray","arrayToConsole","map","item"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Number0, Number1, Number2, Number3, Number4, Number5, Number6, Number7, Number8, Number9 } from '../constants'\r\nexport const useArrayConvertion = (number, initalValue, height = 1, width = 1) => {\r\n    const [numbers, setNumbers] = useState(initalValue)\r\n    const [numbersConsole, setNumbersConsole] = useState(initalValue)\r\n\r\n    useEffect(() => {\r\n        let array = Array.from(number)\r\n        let newArray = []\r\n        let arrayToConsole = []\r\n        array.map((item) => {\r\n            switch (item) {\r\n                case \"0\":\r\n                    newArray = [...newArray, \"Cero\"]\r\n                    arrayToConsole = [...arrayToConsole, Number0(height, width)]\r\n                    break;\r\n                case \"1\":\r\n                    newArray = [...newArray, \"One\"]\r\n                    arrayToConsole = [...arrayToConsole, Number1(height, width)]\r\n                    break;\r\n                case \"2\":\r\n                    newArray = [...newArray, \"Two\"]\r\n                    arrayToConsole = [...arrayToConsole, Number2(height, width)]\r\n                    break;\r\n                case \"3\":\r\n                    newArray = [...newArray, \"Three\"]\r\n                    arrayToConsole = [...arrayToConsole, Number3(height, width)]\r\n                    break;\r\n                case \"4\":\r\n                    newArray = [...newArray, \"Four\"]\r\n                    arrayToConsole = [...arrayToConsole, Number4(height, width)]\r\n                    break;\r\n                case \"5\":\r\n                    newArray = [...newArray, \"Five\"]\r\n                    arrayToConsole = [...arrayToConsole, Number5(height, width)]\r\n                    break;\r\n                case \"6\":\r\n                    newArray = [...newArray, \"Six\"]\r\n                    arrayToConsole = [...arrayToConsole, Number6(height, width)]\r\n                    break;\r\n                case \"7\":\r\n                    newArray = [...newArray, \"Seven\"]\r\n                    arrayToConsole = [...arrayToConsole, Number7(height, width)]\r\n                    break;\r\n                case \"8\":\r\n                    newArray = [...newArray, \"Eight\"]\r\n                    arrayToConsole = [...arrayToConsole, Number8(height, width)]\r\n                    break;\r\n                case \"9\":\r\n                    newArray = [...newArray, \"Nine\"]\r\n                    arrayToConsole = [...arrayToConsole, Number9(height, width)]\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n        setNumbers(newArray)\r\n        setNumbersConsole(arrayToConsole)\r\n    }, [number, height, width])\r\n    return [{ numbers, numbersConsole }]\r\n}"]},"metadata":{},"sourceType":"module"}