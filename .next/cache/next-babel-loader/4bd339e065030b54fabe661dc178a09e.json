{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Number0, Number1, Number2, Number3, Number4, Number5, Number6, Number7, Number8, Number9 } from '../constants';\nexport var useArrayConvertion = function useArrayConvertion(number, initalValue) {\n  _s();\n\n  var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  var _useState = useState(initalValue),\n      numbers = _useState[0],\n      setNumbers = _useState[1];\n\n  var _useState2 = useState(initalValue),\n      numbersConsole = _useState2[0],\n      setNumbersConsole = _useState2[1];\n\n  useEffect(function () {\n    var array = Array.from(number);\n    var newArray = [];\n    var arrayToConsole = [];\n    array.map(function (item) {\n      switch (item) {\n        case \"0\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Cero\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number0(height, width)]);\n          break;\n\n        case \"1\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"One\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number1(height, width)]);\n          break;\n\n        case \"2\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Two\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number2(height, width)]);\n          break;\n\n        case \"3\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Three\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number3(height, width)]);\n          break;\n\n        case \"4\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Four\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number4(height, width)]);\n          break;\n\n        case \"5\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Five\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number5(height, width)]);\n          break;\n\n        case \"6\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Six\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number6(height, width)]);\n          break;\n\n        case \"7\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Seven\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number7(height, width)]);\n          break;\n\n        case \"8\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Eight\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number8(height, width)]);\n          break;\n\n        case \"9\":\n          newArray = [].concat(_toConsumableArray(newArray), [\"Nine\"]);\n          arrayToConsole = [].concat(_toConsumableArray(arrayToConsole), [Number9(height, width)]);\n          break;\n\n        default:\n          break;\n      }\n    });\n    setNumbers(newArray);\n    setNumbersConsole(arrayToConsole);\n  }, [number, height, width]);\n  return [{\n    numbers: numbers,\n    numbersConsole: numbersConsole\n  }];\n};\n\n_s(useArrayConvertion, \"1UpvjPcrnmbykqMDYN02pOc1Y9g=\");","map":{"version":3,"sources":["F:/Development/Projects/NODE/BrightCoders/Feb/kata-01-object-oriented-programming-DemisRincon/src/frontend/library/hooks/Number.js"],"names":["useEffect","useState","Number0","Number1","Number2","Number3","Number4","Number5","Number6","Number7","Number8","Number9","useArrayConvertion","number","initalValue","height","width","numbers","setNumbers","numbersConsole","setNumbersConsole","array","Array","from","newArray","arrayToConsole","map","item"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Number0, Number1, Number2, Number3, Number4, Number5, Number6, Number7, Number8, Number9 } from '../constants'\r\nexport const useArrayConvertion = (number, initalValue, height = 1, width = 1) => {\r\n    const [numbers, setNumbers] = useState(initalValue)\r\n    const [numbersConsole, setNumbersConsole] = useState(initalValue)\r\n\r\n    useEffect(() => {\r\n        let array = Array.from(number)\r\n        let newArray = []\r\n        let arrayToConsole = []\r\n        array.map((item) => {\r\n            switch (item) {\r\n                case \"0\":\r\n                    newArray = [...newArray, \"Cero\"]\r\n                    arrayToConsole = [...arrayToConsole, Number0(height, width)]\r\n                    break;\r\n                case \"1\":\r\n                    newArray = [...newArray, \"One\"]\r\n                    arrayToConsole = [...arrayToConsole, Number1(height, width)]\r\n                    break;\r\n                case \"2\":\r\n                    newArray = [...newArray, \"Two\"]\r\n                    arrayToConsole = [...arrayToConsole, Number2(height, width)]\r\n                    break;\r\n                case \"3\":\r\n                    newArray = [...newArray, \"Three\"]\r\n                    arrayToConsole = [...arrayToConsole, Number3(height, width)]\r\n                    break;\r\n                case \"4\":\r\n                    newArray = [...newArray, \"Four\"]\r\n                    arrayToConsole = [...arrayToConsole, Number4(height, width)]\r\n                    break;\r\n                case \"5\":\r\n                    newArray = [...newArray, \"Five\"]\r\n                    arrayToConsole = [...arrayToConsole, Number5(height, width)]\r\n                    break;\r\n                case \"6\":\r\n                    newArray = [...newArray, \"Six\"]\r\n                    arrayToConsole = [...arrayToConsole, Number6(height, width)]\r\n                    break;\r\n                case \"7\":\r\n                    newArray = [...newArray, \"Seven\"]\r\n                    arrayToConsole = [...arrayToConsole, Number7(height, width)]\r\n                    break;\r\n                case \"8\":\r\n                    newArray = [...newArray, \"Eight\"]\r\n                    arrayToConsole = [...arrayToConsole, Number8(height, width)]\r\n                    break;\r\n                case \"9\":\r\n                    newArray = [...newArray, \"Nine\"]\r\n                    arrayToConsole = [...arrayToConsole, Number9(height, width)]\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n        setNumbers(newArray)\r\n        setNumbersConsole(arrayToConsole)\r\n    }, [number, height, width])\r\n    return [{ numbers, numbersConsole }]\r\n}"]},"metadata":{},"sourceType":"module"}